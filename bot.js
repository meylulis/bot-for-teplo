const { Telegraf, Markup } = require('telegraf');
const fs = require('fs');
require('dotenv').config();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const DATA_FILE = 'data.json';

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
function loadData() {
    try {
        return JSON.parse(fs.readFileSync(DATA_FILE, 'utf8'));
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        return {};
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ JSON
function saveData(data) {
    fs.writeFileSync(DATA_FILE, JSON.stringify(data, null, 2), 'utf8');
}

let usersData = loadData();

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
const mainMenu = Markup.keyboard([
    ['üìç –û—Ç–º–µ—Ç–∏—Ç—å –í–•–û–î', 'üìñ –û—Ç–º–µ—Ç–∏—Ç—å –í–´–•–û–î'],
    ['üí∞ –ë–∞–ª–∞–Ω—Å', 'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è'],
    ['üéÅ –ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥', 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞']
]).resize();

// –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è
const visitTypeMenu = Markup.keyboard([
    ['üé≠ –ö—Ä—É–∂–∫–∏', 'üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'],
    ['üîô –ù–∞–∑–∞–¥']
]).resize();

// –ö–Ω–æ–ø–∫–∏ —Å –∫—Ä—É–∂–∫–∞–º–∏
const clubsMenu = Markup.keyboard([
    ['üé® –†–∏—Å–æ–≤–∞–Ω–∏–µ', 'üé∏ –ú—É–∑—ã–∫–∞'],
    ['ü§ñ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'üìù –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±'],
    ['üîô –ù–∞–∑–∞–¥']
]).resize();

// –ö–Ω–æ–ø–∫–∏ —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏
const eventsMenu = Markup.keyboard([
    ['üé§ –û—Ç–∫—Ä—ã—Ç—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω', 'üèÜ –¢—É—Ä–Ω–∏—Ä –ø–æ —à–∞—Ö–º–∞—Ç–∞–º'],
    ['üé¨ –ö–∏–Ω–æ –≤–µ—á–µ—Ä', 'üé≤ –ò–≥—Ä–æ–≤–∞—è –Ω–æ—á—å'],
    ['üîô –ù–∞–∑–∞–¥']
]).resize();

// –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
bot.start((ctx) => {
    const userId = ctx.from.id;
    usersData[userId] = {}; // –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveData(usersData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–Ω—ã–º –º–µ–Ω—é
    ctx.reply(`üî• –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–¢–µ–ø–ª–æ"!`, mainMenu);
});

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.hears('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞', (ctx) => {
    const userId = ctx.from.id;
    usersData[userId] = {}; // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveData(usersData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–Ω—ã–º –º–µ–Ω—é
    ctx.reply(`üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!\n\nüî• –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ "–¢–µ–ø–ª–æ"!`, mainMenu);
});

// –ö–æ–º–∞–Ω–¥–∞ "–û—Ç–º–µ—Ç–∏—Ç—å –≤—Ö–æ–¥" ‚Üí –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
bot.hears('üìç –û—Ç–º–µ—Ç–∏—Ç—å –í–•–û–î', (ctx) => {
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ—Å–µ—â–µ–Ω–∏—è:', visitTypeMenu);
});

// –í—ã–±–æ—Ä "–ö—Ä—É–∂–∫–∏" ‚Üí –∫–Ω–æ–ø–∫–∏ —Å –∫—Ä—É–∂–∫–∞–º–∏
bot.hears('üé≠ –ö—Ä—É–∂–∫–∏', (ctx) => {
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä—É–∂–æ–∫:', clubsMenu);
});

// –í—ã–±–æ—Ä "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" ‚Üí –∫–Ω–æ–ø–∫–∏ —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏
bot.hears('üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', (ctx) => {
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:', eventsMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫—Ä—É–∂–∫–∞ –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
const activities = ['üé® –†–∏—Å–æ–≤–∞–Ω–∏–µ', 'üé∏ –ú—É–∑—ã–∫–∞', 'ü§ñ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'üìù –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫–ª—É–±', 'üé§ –û—Ç–∫—Ä—ã—Ç—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω', 'üèÜ –¢—É—Ä–Ω–∏—Ä –ø–æ —à–∞—Ö–º–∞—Ç–∞–º', 'üé¨ –ö–∏–Ω–æ –≤–µ—á–µ—Ä', 'üé≤ –ò–≥—Ä–æ–≤–∞—è –Ω–æ—á—å'];

activities.forEach(activity => {
    bot.hears(activity, (ctx) => {
        const userId = ctx.from.id;
        usersData[userId] = { activity, status: 'waiting_for_entry_qr' };
        saveData(usersData);

        ctx.reply(`–í—ã –≤—ã–±—Ä–∞–ª–∏ *${activity}*. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à QR-–∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞.`, { parse_mode: 'Markdown' });
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ QR-–∫–æ–¥–∞ (—Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ)
bot.on('photo', (ctx) => {
    const userId = ctx.from.id;
    const userState = usersData[userId];

    if (!userState) return; // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º

    console.log(`üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ. –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${userState.status}`);

    if (userState.status === 'waiting_for_entry_qr') {
        ctx.reply('‚úÖ –í—Ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ QR-–∫–æ–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞.', mainMenu);
        usersData[userId].status = 'waiting_for_exit_qr';
        saveData(usersData);
    } else if (userState.status === 'waiting_for_exit_qr') {
        usersData[userId].points = (usersData[userId].points || 0) + 10;
        ctx.reply(`‚úÖ –í—ã—Ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ *10 –±–∞–ª–ª–æ–≤* –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ *${userState.activity}*! üéâ`, { parse_mode: 'Markdown' });
        ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', mainMenu);

        delete usersData[userId].status;
        delete usersData[userId].activity;
        saveData(usersData);
    }
});

// –ö–Ω–æ–ø–∫–∞ "–ë–∞–ª–∞–Ω—Å"
bot.hears('üí∞ –ë–∞–ª–∞–Ω—Å', (ctx) => {
    const userId = ctx.from.id;
    const points = usersData[userId]?.points || 0;
    ctx.reply(`üéØ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *${points}* –±–∞–ª–ª–æ–≤.`, { parse_mode: 'Markdown' });
});

// –ö–Ω–æ–ø–∫–∞ "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è" (–∑–∞–≥–ª—É—à–∫–∞)
bot.hears('üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', (ctx) => {
    ctx.reply('üèÖ –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è!');
});

// –ö–Ω–æ–ø–∫–∞ "–ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥"
bot.hears('üéÅ –ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥', (ctx) => {
    ctx.reply('üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –±–∞–ª–ª—ã –Ω–∞ –ø—Ä–∏–∑—ã.\n\nüí° –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...', mainMenu);
});

// –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ—Ç–∏—Ç—å –í–´–•–û–î"
bot.hears('üìñ –û—Ç–º–µ—Ç–∏—Ç—å –í–´–•–û–î', (ctx) => {
    const userId = ctx.from.id;

    if (usersData[userId]?.status === 'waiting_for_exit_qr') {
        ctx.reply('üì§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ QR-–∫–æ–¥ –≤—ã—Ö–æ–¥–∞.');
    } else {
        ctx.reply('–í—ã –Ω–µ –æ—Ç–º–µ—á–∞–ª–∏ –≤—Ö–æ–¥. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ—Ç—å—Ç–µ –≤—Ö–æ–¥!', mainMenu);
    }
});

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" (–±–æ–ª—å—à–µ –Ω–µ —É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
bot.hears('üîô –ù–∞–∑–∞–¥', (ctx) => {
    ctx.reply('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', mainMenu);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
